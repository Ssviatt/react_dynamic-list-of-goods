{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","className","color","name","id","getAll","fetch","then","response","json","App","useState","all","getFirst","getRed","goodsList","setGoodsList","visibleGoodsList","setVisibleGoodsList","loadData","a","sort","b","localeCompare","splice","filter","el","useEffect","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,UAAWD,EAAKE,MAHlB,SAKGF,EAAKG,MAJDH,EAAKI,UCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICHMC,EAAgB,WAC3B,MAAkCC,mBAI/B,CACDC,IAAK,GACLC,SAAU,GACVC,OAAQ,KAPV,mBAAOC,EAAP,KAAkBC,EAAlB,KASA,EAAgDL,mBAAiB,IAAjE,mBAAOM,EAAP,KAAyBC,EAAzB,KAEMC,EAAQ,uCAAG,gCAAAC,EAAA,sEACGf,IADH,cACTO,EADS,gBDRVP,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZuB,MAAK,SAACD,EAAGE,GAAJ,OAAUF,EAAEjB,KAAKoB,cAAcD,EAAEnB,SACtCqB,OAAO,EAAG,MCKE,cAETX,EAFS,gBDDVR,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM2B,QAAO,SAAAC,GAAE,MAAiB,QAAbA,EAAGxB,YCAtB,OAGTY,EAHS,OAKfE,EAAa,CAAEJ,MAAKC,WAAUC,WALf,4CAAH,qDAYd,OAJAa,qBAAU,WACRR,MACC,IAGD,sBAAKlB,UAAU,MAAf,UACE,uDAEA,wBACE2B,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMX,EAAoBH,EAAUH,MAH/C,4BAQA,wBACEgB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMX,EAAoBH,EAAUF,WAH/C,gCAQA,wBACEe,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMX,EAAoBH,EAAUD,SAH/C,4BAQA,cAAC,EAAD,CAAWhB,MAAOmB,QCxDxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d471233.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={good.color}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .splice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(el => el.color === 'red')); // get only red\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goodsList, setGoodsList] = useState<{\n    all: Good[],\n    getFirst: Good[],\n    getRed: Good[],\n  }>({\n    all: [],\n    getFirst: [],\n    getRed: [],\n  });\n  const [visibleGoodsList, setVisibleGoodsList] = useState<Good[]>([]);\n\n  const loadData = async () => {\n    const all = await getAll();\n    const getFirst = await get5First();\n    const getRed = await getRedGoods();\n\n    setGoodsList({ all, getFirst, getRed });\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => setVisibleGoodsList(goodsList.all)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => setVisibleGoodsList(goodsList.getFirst)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => setVisibleGoodsList(goodsList.getRed)}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={visibleGoodsList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}